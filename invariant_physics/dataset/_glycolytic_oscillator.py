from .ode import *
from ._utils import params_random, params_default

PARAMS_CONFIG = {
    "task": "Glycolytic_Oscillator",
    "env_max": 10,
    "ode_dim": 7,
    "ode_dim_function": 7,
    "params_strategy_list": ["default", "random"],
    "params": {
        "default": params_default,
        "random": params_random,
    },
    "random_params_base": [2.5, 90, 6, 16, 100, 1.28, 12, 0.75, 4, 1, 4, 13, 0.1, 1.8],# {'J0': 2.5, 'k1': 90, 'k2': 6, 'k3': 16, 'k4': 100, 'k5': 1.28, 'k6': 12, 'K1': 0.75, 'q': 4, 'N': 1, 'A': 4, 'kappa': 13, 'psi': 0.1, 'k': 1.8}
    "default_params_list": [
        [2.5, 90, 6, 16, 100, 1.28, 12, 0.75, 4, 1, 4, 13, 0.1, 1.8],
        [3.02, 103.93, 5.71, 13.69, 100.68, 1.21, 14.04, 0.66, 3.94, 1.05, 4.98, 13.04, 0.09, 2.08],
        [1.95, 108.76, 6.95, 13.65, 99.73, 1.24, 13.09, 0.88, 3.03, 0.72, 4.81, 12.48, 0.12, 1.26],
        [3.18, 114.18, 4.4, 12.01, 120.13, 1.46, 13.22, 0.66, 4.25, 1.06, 4.19, 10.34, 0.1, 1.69],
        [2.11, 92.39, 5.53, 17.0, 107.54, 0.95, 8.49, 0.9, 3.42, 0.84, 5.19, 12.77, 0.12, 1.77],
        [2.1, 68.57, 5.63, 12.69, 73.99, 1.2, 15.01, 0.89, 4.64, 0.83, 4.09, 11.26, 0.08, 1.37],
        [2.68, 103.06, 7.06, 20.25, 114.39, 1.6, 8.61, 0.73, 5.06, 1.09, 4.96, 9.98, 0.1, 1.53],
        [2.94, 107.39, 5.95, 13.71, 70.03, 1.41, 11.79, 0.87, 3.7, 1.16, 3.45, 15.35, 0.11, 1.71],
        [2.24, 71.15, 6.54, 11.9, 102.15, 1.18, 8.82, 0.75, 2.89, 0.96, 2.97, 9.81, 0.1, 2.15],
        [2.09, 114.96, 4.65, 17.97, 75.11, 1.09, 15.59, 0.62, 4.34, 0.98, 3.89, 12.96, 0.08, 2.16],
    ],
    "random_y0_base": [0.85, 1.00, 0.10, 0.20, 0.20, 1.30, 0.07], # [(0.15, 1.60), (0.19, 2.16), (0.04, 0.20), (0.10, 0.35), (0.08, 0.30), (0.14, 2.67), (0.05, 0.10)]
    "default_y0_list": [
        [0.85, 1.00, 0.10, 0.20, 0.20, 1.30, 0.07],
        [1.03, 1.15, 0.1, 0.17, 0.2, 1.23, 0.08],
        [0.66, 1.21, 0.12, 0.17, 0.2, 1.26, 0.08],
        [1.08, 1.27, 0.07, 0.15, 0.24, 1.48, 0.08],
        [0.72, 1.03, 0.09, 0.21, 0.22, 0.96, 0.05],
        [0.72, 0.76, 0.09, 0.16, 0.15, 1.22, 0.09],
        [0.91, 1.15, 0.12, 0.25, 0.23, 1.63, 0.05],
        [1.0, 1.19, 0.1, 0.17, 0.14, 1.43, 0.07],
        [0.76, 0.79, 0.11, 0.15, 0.2, 1.2, 0.05],
        [0.71, 1.28, 0.08, 0.22, 0.15, 1.1, 0.09]
    ],
    "dt": 0.01,
    "t_min": 0,
    "t_max": 10,
    "curve_names": ["x", "y", "z", "u", "v", "w", "s"],
    "rule_map": ['A->(A+A)', 'A->(A-A)', 'A->(A*A)', 'A->(A/A)', 'A->(A*C)',
                 'A->x', 'A->y'],
    "ntn_list": ['A'],
    "truth_ode_format": ["{0}*x-{1}*x*y", "{3}*x*y-{2}*y"],
    "purification_threshold": 0.05,
}


class GlycolyticOscillator(ODEDataset):
    params_config = PARAMS_CONFIG

    def __init__(self, args):
        super(GlycolyticOscillator, self).__init__(args, PARAMS_CONFIG)

    def _func(self, x, t, env_id):
        J0, k1, k2, k3, k4, k5, k6, K1, q, N, A, kappa, psi, k = iter(self.params[env_id])
        k1s1s6 = k1 * x[0] * x[5] / (1 + (x[5] / K1) ** q)
        dy = np.asarray([
            J0 - k1s1s6,
            2 * k1s1s6 - k2 * x[1] * (N - x[4]) - k6 * x[1] * x[4],
            k2 * x[1] * (N - x[4]) - k3 * x[2] * (A - x[5]),
            k3 * x[2] * (A - x[5]) - k4 * x[3] * x[4] - kappa * (x[3] - x[6]),
            k2 * x[1] * (N - x[4]) - k4 * x[3] * x[4] - k6 * x[1] * x[4],
            -2 * k1s1s6 + 2 * k3 * x[2] * (A - x[5]) - k5 * x[5],
            psi * kappa * (x[3] - x[6]) - k * x[6],
        ])
        return dy


if __name__ == "__main__":
    pass
